{"version":3,"file":"components/cv-display-checkbox.js","sources":["webpack:///./data/example-cv-settings.ts","webpack:///./data/useCvState.ts","webpack:///./components/CvDisplayCheckbox.vue?6650","webpack:///./components/CvDisplayCheckbox.vue?f0c1","webpack:///./components/CvDisplayCheckbox.vue?e1d9","webpack:///./components/CvDisplayCheckbox.vue"],"sourcesContent":["import { Cv } from '@/types/cv_builder_types';\n\nexport const cvSettingTemplate: Cv = {\n  jobTitle: 'Test Job',\n  name: 'Ameer',\n  lastName: 'Hamza',\n  email: 'test@example.com',\n  location: 'location 1,Country 1',\n  phoneNumber: '+92 332 123456',\n  aboutme:\n    \"My name is AmeerHamza, for testing purpose and volume data I'm going to copy paste a specific strig again and again. Here we go, This is test about me. This is test about me. This is test about me. This is test about me. This is test about me.\",\n  jobSkills: ['PHP', 'Node', 'Python', 'Javascript'],\n  softSkills: ['Leadership', 'Team building', 'motivational Speaker'],\n  languages: [\n    { lang: 'English', level: '80%' },\n    { lang: 'Urdu', level: '100%' },\n  ],\n  linkedin: 'https://www.linkedin.com/test-user',\n  twitter: 'https://www.twitter.com/test-user',\n  github: 'https://www.github.com/test-user',\n  website: 'https://test.com',\n  education: [\n    {\n      title: 'bachelor Education',\n      location: 'Test University, City, Country',\n      from: new Date(2015, 9, 1),\n      to: new Date(2019, 4, 1),\n      current: false,\n      summary: 'Bachelor education',\n    },\n  ],\n  work: [\n    {\n      title: 'Full stack developer',\n      location: 'locatio of company',\n      from: new Date(2019, 1, 1),\n      to: new Date(2021, 1, 1),\n      current: true,\n      summary: 'This is a test description of test job',\n    },\n  ],\n  projects: [\n    {\n      title: 'Project 1',\n      location: 'city, country',\n      from: new Date(2019, 1, 1),\n      to: new Date(2020, 1, 1),\n      current: true,\n      summary: 'This is test description of project',\n    },\n  ],\n  displayEducation: true,\n  displayProjects: true,\n  activeColor: '#5B21B6',\n};\n\nexport const cvSettingsEmptyTemplate: Cv = {\n  jobTitle: '',\n  name: '',\n  lastName: '',\n  email: '',\n  location: '',\n  phoneNumber: '',\n  aboutme: '',\n  jobSkills: [],\n  softSkills: [],\n  languages: [],\n  linkedin: '',\n  twitter: '',\n  github: '',\n  website: '',\n  education: [\n    {\n      title: '',\n      location: '',\n      from: new Date(),\n      to: new Date(),\n      current: true,\n      summary: '',\n    },\n  ],\n  work: [\n    {\n      title: '',\n      location: '',\n      from: new Date(),\n      to: new Date(),\n      current: true,\n      summary: '',\n    },\n  ],\n  projects: [\n    {\n      title: '',\n      location: '',\n      from: new Date(),\n      to: new Date(),\n      current: true,\n      summary: '',\n    },\n  ],\n  displayEducation: true,\n  displayProjects: true,\n  activeColor: '#5B21B6',\n};\n","import { useContext, reactive, toRefs } from '@nuxtjs/composition-api';\nimport {\n  cvSettingsEmptyTemplate,\n  cvSettingTemplate,\n} from './example-cv-settings';\nimport { Cv, CvEvent, defaultSkill, languagesSkill } from '@/types/cv_builder_types';\n\nconst state = reactive({\n  formSettings: { ...cvSettingTemplate } as Cv,\n  isLoading: true,\n});\n\nfunction isCvSettingsFromLocalStorageEmpty(item: any): boolean {\n  if (!item || Object.keys(item).length < 1) return true;\n  return Object.keys(item).every(\n    (key) => item[key] === '' || item[key].length < 1\n  );\n}\n\nexport function useCvState() {\n  const context = useContext();\n\n  function setUpCvSettings(): void {\n    const cvEs = localStorage.getItem('cvSettings-es') || '{}';\n    const cvEn = localStorage.getItem('cvSettings-en') || '{}';\n    const isCvEsEmpty = isCvSettingsFromLocalStorageEmpty(JSON.parse(cvEs));\n    const isCvEnEmpty = isCvSettingsFromLocalStorageEmpty(JSON.parse(cvEn));\n    if (isCvEsEmpty && isCvEnEmpty) {\n      state.formSettings = { ...cvSettingTemplate };\n    }\n    if (context.app.i18n.locale.includes('es') && !isCvEsEmpty) {\n      state.formSettings = {\n        ...cvSettingsEmptyTemplate,\n        ...JSON.parse(cvEs),\n      };\n    }\n    if (context.app.i18n.locale.includes('en') && !isCvEnEmpty) {\n      state.formSettings = {\n        ...cvSettingsEmptyTemplate,\n        ...JSON.parse(cvEn),\n      };\n    }\n    if (context.app.i18n.locale.includes('es') && isCvEsEmpty && !isCvEnEmpty) {\n      state.formSettings = {\n        ...cvSettingsEmptyTemplate,\n        ...JSON.parse(cvEn),\n      };\n      localStorage.setItem('cvSettings-es', JSON.stringify(state.formSettings));\n    }\n    if (context.app.i18n.locale.includes('en') && isCvEnEmpty && !isCvEsEmpty) {\n      state.formSettings = {\n        ...cvSettingsEmptyTemplate,\n        ...JSON.parse(cvEs),\n      };\n      localStorage.setItem('cvSettings-en', JSON.stringify(state.formSettings));\n    }\n    state.isLoading = false;\n  }\n\n  function addSkill(e: languagesSkill | defaultSkill): void {\n    if (e.skillType === 'languages') {\n      if (e.skill.lang.trim() === '') return;\n      const newLang = e.skill;\n      const newLangIdx = state.formSettings.languages.findIndex(\n        (lang:any) => lang.lang === newLang.lang\n      );\n      if (newLangIdx < 0) {\n        state.formSettings.languages = [\n          ...new Set([\n            ...state.formSettings.languages,\n            { lang: e.skill.lang, level: `${e.skill.level}%` },\n          ]),\n        ];\n      }\n    } else {\n      if (e.skill.trim() === '') return;\n      state.formSettings[e.skillType] = [\n        ...new Set([...state.formSettings[e.skillType], e.skill]),\n      ];\n    }\n  }\n\n  function removeSkill(e: languagesSkill | defaultSkill): void {\n    if (e.skillType === 'languages') {\n      state.formSettings[e.skillType] = [\n        ...state.formSettings[e.skillType].filter(\n          (skill:any) => skill.lang !== e.skill.lang\n        ),\n      ];\n    } else {\n      state.formSettings[e.skillType] = [\n        ...state.formSettings[e.skillType].filter((skill:any) => skill !== e.skill),\n      ];\n    }\n  }\n\n  function addEntry(e: { sectionName: 'education' | 'work' }) {\n    state.formSettings[e.sectionName].push({\n      title: '',\n      location: '',\n      from: new Date(),\n      to: new Date(),\n      current: false,\n      summary: '',\n    });\n  }\n\n  function removeEntry(e: {\n    sectionName: 'education' | 'work';\n    entry: CvEvent;\n  }) {\n    state.formSettings[e.sectionName] = state.formSettings[\n      e.sectionName\n    ].filter((entry:any) => entry.title !== e.entry.title);\n  }\n\n  function uploadCV(e: any): void {\n    const fr = new FileReader();\n    fr.onload = (e: any) => {\n      const data = JSON.parse(e.target.result);\n      state.formSettings = {\n        ...cvSettingsEmptyTemplate,\n        ...data.formSettings,\n      };\n    };\n    fr.readAsText(e.target.files[0]);\n  }\n\n  function resetForm(): void {\n    state.formSettings = cvSettingsEmptyTemplate;\n    localStorage.removeItem('cvSettings-es');\n    localStorage.removeItem('cvSettings-en');\n  }\n\n  function changeDisplaySection(e: {\n    sectionName: string;\n    status: boolean;\n  }): void {\n    const propName = `display${e.sectionName\n      .slice(0, 1)\n      .toUpperCase()}${e.sectionName.slice(1)}` as\n      | 'displayEducation'\n      | 'displayProjects';\n    state.formSettings[propName] = e.status;\n  }\n\n  return {\n    ...toRefs(state),\n    setUpCvSettings,\n    addSkill,\n    removeSkill,\n    addEntry,\n    removeEntry,\n    uploadCV,\n    resetForm,\n    changeDisplaySection,\n  };\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"form__display-checkbox checkbox\"},[_vm._ssrNode(\"<label class=\\\"checkbox__label\\\" data-v-c65ebe72><input type=\\\"checkbox\\\"\"+(_vm._ssrAttr(\"checked\",_vm.displaySection))+\" class=\\\"checkbox__input\\\" data-v-c65ebe72> <span class=\\\"checkbox__text\\\" data-v-c65ebe72> Display section on CV </span></label>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport { useCvState } from '~/data/useCvState';\n\nexport default Vue.extend({\n  props: {\n    sectionName: {\n      type: String,\n      default: '',\n    },\n    displaySection: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  setup() {\n    const { changeDisplaySection } = useCvState();\n    return {\n      changeDisplaySection,\n    };\n  },\n});\n","import mod from \"-!../node_modules/babel-loader/lib/index.js??ref--12-0!../node_modules/ts-loader/index.js??ref--12-1!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./CvDisplayCheckbox.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??ref--12-0!../node_modules/ts-loader/index.js??ref--12-1!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./CvDisplayCheckbox.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CvDisplayCheckbox.vue?vue&type=template&id=c65ebe72&scoped=true&\"\nimport script from \"./CvDisplayCheckbox.vue?vue&type=script&lang=ts&\"\nexport * from \"./CvDisplayCheckbox.vue?vue&type=script&lang=ts&\"\nfunction injectStyles (context) {\n  \n  \n}\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  \"c65ebe72\",\n  \"2c1043a5\"\n  \n)\n\nexport default component.exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAnDA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AA/CA;;;;;;;;;;;;;;;;;;ACxDA;AACA;AAMA;AACA;AAAA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;;;;;;;;;;;;AC7JA;AACA;AACA;;;;;;;;;;;;ACeA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AACA;AASA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAjBA;;ACpBA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}